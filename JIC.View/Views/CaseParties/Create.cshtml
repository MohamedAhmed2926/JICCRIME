@using JIC.Crime.View.Models;
@using JIC.Crime.View.Helpers;
@model FullCasePartiesViewModel

@using (Html.BeginAjaxForm("CaseParty_div", Url.Action(Model.CasePartyViewModels.id == 0 ? "Create" : "Edit", new { CaseID = Model.CaseID })))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    //Html.RenderPartial("Person/_ViewPerson", Model.PersonData);
    Html.CRenderAction("ViewPersonData", "Person", Model.PersonData.PersonData);
    <div class="panel panel-primary">
        <div class="panel-heading">
            استكمال بياناته كخصم
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-sm-6">
                    @Html.CDropDownFor(model => model.CasePartyViewModels.PartyType, new SelectList(Model.PartyTypes, "ID", "Name"), true)
                    @Html.HiddenFor(model => model.CasePartyViewModels.OriginalPartyType)
                    @Html.HiddenFor(model => model.CasePartyViewModels.id)
                </div>
                <div class="col-sm-6">
                    @Html.CDropDownFor(model => model.CasePartyViewModels.DefendantStatus, new SelectList(Model.DefendantStatus, "ID", "Name"), new { style = "display:none;" }, IncludeDefaultItem: true, IsRequired: true)
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    @Html.CCheckBox(model => model.CasePartyViewModels.IsCivilRightProsecutor, "مدعى بالحق المدنى")
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    @Html.CSelectize(model => model.CasePartyViewModels.CrimeTypes, new SelectList(Model.CrimeTypes, "ID", "Name"), (new CelectizeAtt { SelectizeMode = JIC.Base.SelectizeModes.Tags, IsRequired = true }))
                </div>
            </div>
        </div>
    </div>
    <input type="submit" value="حفظ" @*onclick="showRequireJob()" id="btnSubmit"*@ />


    <script>


    function @(Html.IdFor(model => model.CasePartyViewModels.PartyType))ShowHidePartyData(value) {
        switch (value) {
                case @((int)JIC.Base.PartyTypes.Defendant):
                case @((int)JIC.Base.PartyTypes.VictimAndDefendant):
                    $("#@Html.IdForDiv(model => model.CasePartyViewModels.CrimeTypes)").show();
                    $("#@Html.IdForDiv(model => model.CasePartyViewModels.DefendantStatus)").show();
                    AddRequiredValidation("#@Html.IdFor(model => model.CasePartyViewModels.CrimeTypes)");
                    AddRequiredValidation("#@Html.IdFor(model => model.CasePartyViewModels.DefendantStatus)");
                    break;
                default:
                    $("#@Html.IdForDiv(model => model.CasePartyViewModels.CrimeTypes)").hide();
                    $("#@Html.IdForDiv(model => model.CasePartyViewModels.DefendantStatus)").hide();
                    RemoveRequiredValidation("#@Html.IdFor(model => model.CasePartyViewModels.CrimeTypes)");
                    RemoveRequiredValidation("#@Html.IdFor(model => model.CasePartyViewModels.DefendantStatus)");
                    break;
        }
        var form = $("#@Html.IdForDiv(model => model.CasePartyViewModels.CrimeTypes)").closest('form')
            .removeData("validator") /* added by the raw jquery.validate plugin */
            .removeData("unobtrusiveValidation");  /* added by the jquery unobtrusive plugin*/

        $.validator.unobtrusive.parse(form);
        if (parseInt($("#@Html.IdFor(model => model.CasePartyViewModels.PartyType)").val()) == 1)
        {
                $(document).trigger('NORequireValidation:Show');
                debugger;

        }
        if (parseInt($("#@Html.IdFor(model => model.CasePartyViewModels.PartyType)").val()) == 2)
        {
                $(document).trigger('RequireValidation:Show');
                debugger;

        }

    }
        OnDocReady(function () {
        $("#@Html.IdFor(model => model.CasePartyViewModels.PartyType)").on('change', function () {
            @(Html.IdFor(model => model.CasePartyViewModels.PartyType))ShowHidePartyData(parseInt($(this).val()));
        });
        @(Html.IdFor(model => model.CasePartyViewModels.PartyType))ShowHidePartyData(parseInt($("#@Html.IdFor(model => model.CasePartyViewModels.PartyType)").val()));
    });

    function AddRequiredValidation(selector) {
        $(selector).attr("data-val", "true");
        $(selector).attr("data-val-required", "@JIC.Base.Resources.Resources.RequiredErrorMessage");
    }
    function RemoveRequiredValidation(selector) {
        $(selector).removeAttr("data-val");
        $(selector).removeAttr("data-val-required");
        }

        //function showRequireJob() {
        //    debugger;
        //       $(document).trigger('RequireValidation:Show');
        //    };

        OnDocReady(function () {
            $(document).on('StopSubmit:Show', function () {
                debugger;
                $("#btnSubmit").attr("disabled", true);

            });
        });

        //OnDocReady(function () {
        //    $(document).on('EnableSubmit:Show', function () {
        //        debugger;
        //        $("#btnSubmit").removeAttr("disabled");
        //     });
        //});

    </script>
}

@if (ViewBag.SavedCreate != null && (bool)ViewBag.SavedCreate)
{
    <script>
        debugger;
        $(document).trigger('Parties:SavedSuccefull');

    </script>
}