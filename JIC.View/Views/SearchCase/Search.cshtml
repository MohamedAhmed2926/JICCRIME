@model JIC.Crime.View.Models.SearchViewModel

@{
    ViewBag.Title = JIC.Base.Resources.PageTitles.CaseSearch;
}

@section scripts {
    <script>

        // var currentTime = new Date();

        $('.datetimepicker').datepicker({
            autoclose: true,
            language: "ar",
            format: "dd/mm/yyyy"
            // defaultViewDate: { year: currentTime.getFullYear(), month: currentTime.getMonth() + 1, day: currentTime.getDate() }
        });
        function ddlJudgeDateTypes_SelectedIndexChanged() {
            // var currentTime = new Date();
            //   alert($("#JudgeType").val());
            if ($("#JudgeType").val() == 26 || $("#JudgeType").val() == 27) // to be edited
            {
                //  $('#JudgeDate').datepicker('clearDates');
                //  $('#JudgeDate').datepicker('Hide');
                $('#JudgeDate').val("");
                $('#JD').hide();
            }

            else {
                // $('#JudgeDate').datepicker('show');
                $('#JD').show();
            }

        }

        function ddlSessionsDateTypes_SelectedIndexChanged() {
            // var currentTime = new Date();
            // alert($("#SessionDateType").val());
            if ($("#SessionDateType").val() == 1) // to be edited
            {
                // $('#SessionDate').datepicker('clearDates');
                $('#SessionDate').val("");
                $('#SD').hide();
                // $('#SessionDate').datepicker({ setEndDate: false });
            }

            else {
                // $('#SessionDate').datepicker('show');
                $('#SD').show();
            }
            // if ($("#SessionDateType").val() == 3) // to be edited
            // {
            //     $('#SessionDate').datepicker('setStartDate', currentTime);
            //    // $('#SessionDate').datepicker({ setEndDate:false});
            // }
            // else if ($("#SessionDateType").val() == 2)
            // {
            //     $('#SessionDate').datepicker('setEndDate', currentTime);
            //     //  $('#SessionDate').datepicker({ setStartDate: false });}
            // }
            // else
            // {
            //     $('#SessionDate').datepicker({ setStartDate: currentTime });
            //     $('#SessionDate').datepicker({ setEndDate: false });
            // }
        }

        $(document).ready(function () {
            //  var currentTime = new Date();
            // var newdate = currentTime.getDate() + "/" + (currentTime.getMonth() + 1) + "/" + currentTime.getFullYear();

        });
        function ddlCourts_SelectedIndexChanged() {
            var Courtid = $("#@Html.IdFor(m => m.CourtID)").val();



            SetCircuits(Courtid);
         
            SetFirstPros(Courtid);
            SetSecondPros(Courtid);
            SetPS(Courtid);
        }
        function SetCircuits(Courtid) {
            $.ajax(
                {
                    url: '/SearchCase/GetCircuits',
                    type: "GET",
                    dataType: "JSON",
                    data: { CourtID: Courtid },
                    contentType: 'application/json; charset=utf-8',
                    success: function (Circuits) {
                        $('#CircuitID').each(function () {
                            if (this.selectize) {
                                var ddlCircuits = this.selectize;
                                ddlCircuits.clearOptions();
                                $.each(Circuits, function (i, Circuits) {
                                    ddlCircuits.addOption({ value: Circuits.ID, text: Circuits.Name });
                                });
                                ddlCircuits.setValue('');
                            }
                        });
                    }
                });
        }
        function SetPS(Courtid) {
            $.ajax(
                    {
                        url: '/SearchCase/GetPoliceStations',
                        type: "GET",
                        dataType: "JSON",
                        data: { CourtID: Courtid },
                        contentType: 'application/json; charset=utf-8',
                        success: function (PoliceStations) {
                            $('#PoliceStationID').each(function () {
                                if (this.selectize) {
                                    var ddlPoliceStations = this.selectize;
                                    ddlPoliceStations.clearOptions();
                                    ddlPoliceStations.addOption({ value: "", text: "@JIC.Base.Resources.Resources.DefaultSelectItem" });
                                    $.each(PoliceStations, function (i, PoliceStations) {
                                        ddlPoliceStations.addOption({ value: PoliceStations.ID, text: PoliceStations.Name });
                                    });
                                    ddlPoliceStations.setValue('');
                                }
                            });
                        }
                });
        }
        function SetFirstPros(Courtid) {
            $.ajax(
                {
                    url: '/SearchCase/GetIntialProsecution',
                    type: "GET",
                    dataType: "JSON",
                    data: { CourtID: Courtid },
                    contentType: 'application/json; charset=utf-8',
                    success: function (Prosecutionss) {
                        $('#FirstLevelProsecutionID').each(function () {
                            if (this.selectize) {
                                var ddlFirstLevelProsecution = this.selectize;
                                ddlFirstLevelProsecution.clearOptions();
                                $.each(Prosecutionss, function (i, Prosecutionss) {
                                    ddlFirstLevelProsecution.addOption({ value: Prosecutionss.ID, text: Prosecutionss.Name });
                                });

                                ddlFirstLevelProsecution.setValue('');
                            }
                        });
                    }
                });
}
        function SetSecondPros(Courtid) {
            $.ajax(
                {
                    url: '/SearchCase/GetElementaryProsecutions',
                    type: "GET",
                    dataType: "JSON",
                    data: { CourtID: Courtid },
                    contentType: 'application/json; charset=utf-8',
                    success: function (Prosecutions) {
                        $('#SecondLevelProsecutionID').each(function () {
                            if (this.selectize) {
                                var ddlSecondLevelProsecution = this.selectize;
                                ddlSecondLevelProsecution.clearOptions();
                                $.each(Prosecutions, function (i, Prosecutions) {
                                    ddlSecondLevelProsecution.addOption({ value: Prosecutions.ID, text: Prosecutions.Name });
                                });

                                ddlSecondLevelProsecution.setValue('');
                            }
                        });
                    }
                });
        }




                 

                         
                                       
        }
</script>
    }




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
@Html.HiddenFor(k=>k.CourtID )
    <div >
        <h4>@JIC.Base.Resources.PageTitles.CaseSearch</h4>
        <hr />
        <div class="row">
            
            <div class="col-xs-2">
                @if ((bool)ViewData["isJICAdmin"])
                {
                @Html.CDropDownFor(m => m.CourtID, new SelectList(Model.Courts, "ID", "Name"), new { onchange = "ddlCourts_SelectedIndexChanged()" }, false)
                }
                else
                {
                    @Html.CTextBoxFor(m => m.CourtName, new { placeholder = Html.DisplayNameFor(n => n.CourtName) } , true )
                }


            </div>
            <div class="col-xs-2">
              
            </div>
            <div class="col-xs-2">
               
            </div>
            </div>

            <div class="row">
                <div class="col-xs-2">
                    @Html.CTextBoxFor(m => m.SecondNumber, new { placeholder = Html.DisplayNameFor(n => n.SecondNumber) })
                </div>
                <div class="col-xs-1">
                    @Html.CTextBoxFor(m => m.SecondYear, new { placeholder = Html.DisplayNameFor(n => n.SecondYear) })
                </div>
                <div class="col-xs-2">
                    @Html.CDropDownFor(m => m.OverAllNumberProsecution, new SelectList(Model.SecondLevelProsecutions, "ID", "Name"), true)

                </div>


                <div class="col-xs-2">
                </div>

                <div class="col-xs-2">
                    @Html.CDropDownFor(m => m.SessionDateType, new SelectList(Model.SessionDateTypes, "ID", "Name"), new { onchange = "ddlSessionsDateTypes_SelectedIndexChanged()" }, IncludeDefaultItem: true)
                </div>
                <div class="col-xs-2" id="SD">
                    @Html.CDatetimepickerFor(model => model.SessionDate)
                </div>
            </div>


            <div class="row">

                <div class="col-xs-2">
                    @Html.CTextBoxFor(m => m.FirstNumber, new { placeholder = Html.DisplayNameFor(n => n.FirstNumber) })
                </div>
                <div class="col-xs-1">
                    @Html.CTextBoxFor(m => m.FirstYear, new { placeholder = Html.DisplayNameFor(n => n.FirstYear) })
                </div>
                <div class="col-xs-2">
                    @Html.CDropDownFor(m => m.FirstLevelProsecutionID, new SelectList(Model.FirstLevelProsecutions, "ID", "Name"), true)
                </div>








                <div class="col-xs-2">
                </div>
                <div class="col-xs-2">
                    @Html.CDropDownFor(m => m.JudgeType, new SelectList(Model.JudgeTypes, "ID", "Name"), new { onchange = "ddlJudgeDateTypes_SelectedIndexChanged()" }, IncludeDefaultItem: true)
                </div>
                <div class="col-xs-2" id="JD">
                    @Html.CDatetimepickerFor(model => model.JudgeDate)
                </div>


            </div>

            <div class="row">

                <div class="col-xs-2">
                    @Html.CTextBoxFor(m => m.OverAllNumber, new { placeholder = Html.DisplayNameFor(n => n.OverAllNumber) })
                </div>
                <div class="col-xs-1">
                    @Html.CTextBoxFor(m => m.OverAllNumberYear, new { placeholder = Html.DisplayNameFor(n => n.OverAllNumberYear) })
                </div>
                <div class="col-xs-2">
                    @Html.CDropDownFor(m => m.OverAllNumberProsecution, new SelectList(Model.SecondLevelProsecutions, "ID", "Name"), true)
                </div>

                <div class="col-xs-2">
                </div>

                <div class="col-xs-2">
                    @Html.CDropDownFor(m => m.PartyType, new SelectList(Model.PartyTypes, "ID", "Name"), IncludeDefaultItem: true)
                </div>
                <div class="col-xs-2">
                    @Html.CTextBoxFor(m => m.PartyName)
                </div>


            </div>

            <div class="row">
                <div class="col-xs-2">
                    @Html.CDropDownFor(m => m.CrimeType, new SelectList(Model.CrimesTypes, "ID", "Name"), true)
                </div>

                <div class="col-xs-3">
                    @*@Html.CCheckBox(m => m.HasObtainment, JIC.Base.Resources.Resources.HasObtainment.ToString())*@
                    @Html.CDropDownFor(m => m.HasObtainment, new SelectList(Model.ObtainmentStatuses, "ID", "Name"), IncludeDefaultItem: true)
                </div>
                <div class="col-xs-2">
                </div>


                <div class="col-xs-2">
                    @Html.CDropDownFor(m => m.CircuitID, new SelectList(Model.Circuits, "ID", "Name"), true)
                </div>
                <div class="col-xs-2">
                    @Html.CDropDownFor(m => m.PoliceStationID, new SelectList(Model.PoliceStations, "ID", "Name"), true)
                </div>

            </div>




            <div class="form-group ">
                <div class="row">
                    <div class="col-xs-2">

                        <input type="submit" value="@JIC.Base.Resources.Resources.Search" class="btn btn-default" />
                    </div>
                    <div class="col-xs-2">

                        <input type="reset" value="@JIC.Base.Resources.Resources.Reset" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>



      

        @Html.AjaxGrid(Url.Action("SearchGrid", new {
       FirstYear = Model.FirstYear ,
       FirstNumber = Model.FirstNumber  ,
       FirstLevelProsecutionID = Model.FirstLevelProsecutionID ,
       SecondYear = Model.SecondYear ,
       SecondNumber = Model.SecondNumber ,
       SecondLevelProsecutionID = Model.SecondLevelProsecutionID ,
       PartyType = Model.PartyType ,
       PartyName = Model.PartyName,
       JudgeType = Model.JudgeType ,
       JudgeDate = Model.JudgeDate ,
       CircuitID = Model.CircuitID ,
       CrimeType = Model.CrimeType ,
       OverAllNumber = Model.OverAllNumber ,
       OverAllNumberYear = Model.OverAllNumberYear ,
       OverAllNumberProsecution = Model.OverAllNumberProsecution,
       SessionDate = Model.SessionDate ,
       SessionDateType = Model.SessionDateType,
       PoliceStationID = Model.PoliceStationID ,
       HasObtainment = Model.HasObtainment ,
       CourtID = Model.CourtID
   }))
}



