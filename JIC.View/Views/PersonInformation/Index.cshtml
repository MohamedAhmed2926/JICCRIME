@model JIC.Crime.View.Models.PersonInformatViewModel

@{
    ViewBag.Title = "استعلامات";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@{Html.RenderAction("Create");}

<button class="accordion"><span class="button1">بيانات الشخص</span></button>
<div class="panel">
    <div class="row">
        <div class="col-sm-6">
            @Html.CTextBoxFor(model => model.NationalNo, new { }, true)
        </div>
        <div class="col-sm-6">
            @Html.CTextBoxFor(model => model.PersonName, new { }, true)
        </div>
    </div>
    <div class="row">
       
        <div class="col-sm-6">
            @Html.CTextBoxFor(model => model.Job, new { }, true)
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            @Html.CTextBoxFor(model => model.Nationalities, true)
        </div>
        <div class="col-sm-6">
            @Html.CTextBoxFor(model => model.PassportNo, new { }, true)
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3">
            @Html.CTextBoxFor(model => model.Cities, new { }, true)
        </div>
        <div class="col-sm-3">
            @Html.CTextBoxFor(model => model.PoliceStations, new { }, true)
        </div>
        <div class="col-sm-6">
            @Html.CTextBoxFor(model => model.address, new { }, true)
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            @Html.CTextBoxFor(model => model.BirthDate, new { }, true)
        </div>
        <div class="col-sm-6">
            @Html.CTextBoxFor(model => model.Age, new { }, true)
        </div>
    </div>
</div>

<button class="accordion"><span class="button1">بيانات المستخدم</span></button>
<div class="panel">

    <div class="row">
        <div class="col-sm-6">
            @Html.CTextBoxFor(model => model.UserTypes, new { }, true)
        </div>
    </div>


    <div class="row">
        <div class="col-sm-6">
            @Html.CTextBoxFor(model => model.PhoneNo, new { }, true)
        </div>
    </div>
</div>

<button class="accordion"><span class="button1">القضايا</span></button>
<div class="panel">
    @(Html
                                                                                                                                                                                                                    .Grid(Model.CasesList)
                                                                                                                                                                                                                    .Build(columns =>
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                        columns.Add(model => model.CaseName).Titled("اسم القضية ");
                                                                                                                                                                                                                        columns.Add(model => model.OverallNumber).Titled(JIC.Base.Resources.Resources.OverAllNumber);
                                                                                                                                                                                                                        columns.Add(model => model.Status).Titled(JIC.Base.Resources.Resources.Status);
                                                                                                                                                                                                                    })
                                                                                                                                                                                                                    .Filterable()
                                                                                                                                                                                                                    .Sortable()
                                                                                                                                                                                                                    .Pageable()


    )
</div>


<style>
    .button1{
         padding-left:850px
    }
    .accordion {
        background-color: #eee;
        color: #444;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        text-align: left;
        border: none;
        outline: none;
        transition: 0.4s;
    }

        /* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
        .active, .accordion:hover {
            background-color: #ccc;
           
        }
       
    /* Style the accordion panel. Note: hidden by default */
    .panel {
        padding: 0 18px;
        background-color: white;
        display: none;
        overflow: hidden;
    }
       
</style>


<script>
    var acc = document.getElementsByClassName("accordion");
    var i;

    for (i = 0; i < acc.length; i++) {
        acc[i].addEventListener("click", function () {
            /* Toggle between adding and removing the "active" class,
            to highlight the button that controls the panel */
            this.classList.toggle("active");
           
            /* Toggle between hiding and showing the active panel */
            var panel = this.nextElementSibling;
            if (panel.style.display === "block") {
                panel.style.display = "none";
            } else {
                panel.style.display = "block";
             //  panel.toggle("getnegative");
                
            }
        });
    }
</script>
<style>
    .panel {
        padding: 0 18px;
        background-color: white;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.2s ease-out;
    }

    .accordion:after{
        content: '\02795'; /* Unicode character for "plus" sign (+) */
        font-size: 13px;
        color: #777;
        float: right;
        margin-left: 5px;
    }

    .active:after {
        content: '\2796'; /* Unicode character for "minus" sign (-) */
    }
    .negativeSign:after {
        content: '\2796'; /* Unicode character for "minus" sign (-) */
 
    }
    
</style>

<script>
    var acc = document.getElementsByClassName("accordion");
    var i;
    
    for (i = 0; i < acc.length; i++) {
        
        acc[i].addEventListener("click", function () {
          //  this.classList.style.content = "\2796";
            this.classList.toggle("active");
            this.classList.toggle("negativeSign");
            var panel = this.nextElementSibling;
            if (panel.style.maxHeight) {
                panel.style.maxHeight = null;
            } else {
                panel.style.maxHeight = panel.scrollHeight + "px";
            }
        });
    }
</script>
