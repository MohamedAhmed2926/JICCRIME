@using JIC.Crime.View.Models;

@model CalendarViewModel

@if ((bool)ViewData["SessionEnded"])
{
    <script>
        debugger;
        window.location.href = "/User/Login?returnUrl=/";
    </script>
}
<style>
    .highlighted, .calendar-seperator .highlighted {
        background-color: #b1ada7 !important;
        color: black !important;
    }

    .court-calendar .new.day, .court-calendar .old.day {
        background-color: #f3f2f0;
        color: #333 !important
    }

    .calendar-seperator {
        background-color: #666460;
        color: white;
        border-radius: 0 !important;
    }

    .calendar-vacation {
        background-color: #ffcafd;
        border-radius: 0 !important;
    }

    .calendar-first-cycle {
        background-color: #ffffc8;
        border-radius: 0 !important;
    }

    .calendar-second-cycle {
        background-color: #9cd7ff;
        border-radius: 0 !important;
    }

    .calendar-third-cycle {
        background-color: #ffe0bb;
        border-radius: 0 !important;
    }

    .calendar-fourth-cycle {
        background-color: #b3ffd1;
        border-radius: 0 !important;
    }

    .court-calendar .table-condensed {
        width: 100%
    }

    .court-calendar .datepicker-inline {
        width: 100%
    }

    .court-calendar .datepicker-days thead tr:nth-child(2), .court-calendar .datepicker-months thead tr, .court-calendar .datepicker-years thead tr {
        background-color: #00AF8D;
    }

    .court-calendar .datepicker-days thead tr:nth-child(3) {
        background-color: #343535;
    }

    .court-calendar .dow {
        color: white;
    }
</style>
<div class="row">
    <div class="court-calendar" id="court-calendar">

    </div>
</div>
<div class="row">
    <table class="table">
        <tr>
            <td>
                <div style="width: 16px;height: 16px;border: 1px solid;display: inline-block;" class="highlighted"></div>
                عطلة أسبوعية
            </td>
            <td>
                <div style="width: 16px;height: 16px;border: 1px solid;display: inline-block;" class="calendar-vacation"></div>
                اجازة رسمية
            </td>
            <td>
                <div style="width: 16px;height: 16px;border: 1px solid;display: inline-block;" class="calendar-seperator"></div>
                فاصل إنعقاد
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                <div style="width: 16px;height: 16px;border: 1px solid;display: inline-block;" class="calendar-first-cycle"></div>
                الدور الأول
            </td>
            <td>
                <div style="width: 16px;height: 16px;border: 1px solid;display: inline-block;" class="calendar-second-cycle"></div>
                الدور الثانى
            </td>
            <td>
                <div style="width: 16px;height: 16px;border: 1px solid;display: inline-block;" class="calendar-third-cycle"></div>
                الدور الثالث
            </td>
            <td>
                <div style="width: 16px;height: 16px;border: 1px solid;display: inline-block;" class="calendar-fourth-cycle"></div>
                الدور الرابع
            </td>
        </tr>
    </table>
</div>

<script>
    var ViciationDates = @Html.Raw(Model.VicationDatesJson);
    var FirstCycleDates =  @Html.Raw(Model.FirstCycleDatesJson);
    var TempFirstCycle = [];
    var SecondCycleDates =  @Html.Raw(Model.SecondCycleDatesJson);
    var TempSecondCycle = [];
    var ThirdCycleDates =  @Html.Raw(Model.ThirdCycleDatesJson);
    var TempThirdCycle = [];
    var FourthCycleDates =  @Html.Raw(Model.FourthCycleDatesJson);
    var TempFourthCycle = [];
    var Seperators = @Html.Raw(Model.SeperatorsJson);
    var FirstSeperator = [];
    var SecondSeperator = [];
    var CurrentMonth = @(Model.DefaultViewDate.Month-1);
    var CurrentYear = @Model.DefaultViewDate.Year;

    function IsVication(date) {
        for (index = 0; index < ViciationDates.length; index++) {
            var arrDate = moment(ViciationDates[index].Date);
            if (arrDate.month() == date.getMonth() &&
                arrDate.year() == date.getFullYear() &&
                arrDate.date() == date.getDate()) {
                return ViciationDates[index].Name;
            }
        }
        return false;
    }
    function IsFirstCycle(date) {
        return TempFirstCycle.length > 0 ? IsDateIn(date, TempFirstCycle) : IsDateIn(date, FirstCycleDates) ;
    }
    function IsSecondCycle(date) {
        return TempSecondCycle.length > 0 ? IsDateIn(date, TempSecondCycle) : IsDateIn(date, SecondCycleDates) ;
    }
    function IsThirdCycle(date) {
        return TempThirdCycle.length > 0 ? IsDateIn(date, TempThirdCycle) : IsDateIn(date, ThirdCycleDates);
    }
    function IsFourthCycle(date) {
        return TempFourthCycle.length > 0 ? IsDateIn(date, TempFourthCycle) : IsDateIn(date, FourthCycleDates);
    }
    function IsSeperator(date) {
        return (FirstSeperator.length + SecondSeperator.length) > 0 ? IsDateIn(date, FirstSeperator) || IsDateIn(date, SecondSeperator) : IsDateIn(date, Seperators);
    }
    function IsDateIn(date, arr) {
        for (index = 0; index < arr.length; index++) {
            var arrDate = moment(arr[index]);
            if (arrDate.month() == date.getMonth() &&
                arrDate.year() == date.getFullYear() &&
                arrDate.date() == date.getDate()) {
                return true;
            }
        }
        return false;
    }
    OnDocReady(function () {
        $('#court-calendar').datepicker({
            format: "dd/mm/yyyy",
            language: "ar",
            maxViewMode: 1,
            weekStart: 6,
            titleFormat: "days",
            startDate: new Date(@DateTime.Today.Year,@(DateTime.Today.Month-1), 1),
            endDate: new Date(@DateTime.Today.Year,@(DateTime.Today.Month+17), 0),
            daysOfWeekHighlighted: "@String.Join(",",Model.NonWorkDays.Select(nonWorkDay=>((int)nonWorkDay).ToString()))",
            defaultViewDate: { year: CurrentYear, month: CurrentMonth , day: 1 },
            beforeShowDay: function (date) {
                var Vication = IsVication(date);
                if (Vication) {
                    return {
                        classes: 'calendar-vacation',
                        tooltip: Vication
                    }
                } else if(IsFirstCycle(date)){
                    return {
                        classes: 'calendar-first-cycle',
                        tooltip: "الدور الأول"
                    }
                } else if(IsSecondCycle(date)){
                    return {
                        classes: 'calendar-second-cycle',
                        tooltip: "الدور الثانى"
                    }
                } else if(IsThirdCycle(date)){
                    return {
                        classes: 'calendar-third-cycle',
                        tooltip: "الدور الثالث"
                    }
                } else if (IsFourthCycle(date)) {
                    return {
                        classes: 'calendar-fourth-cycle',
                        tooltip: "الدور الرابع"
                    }
                } else if (IsSeperator(date)) {
                    return {
                        classes: 'calendar-seperator',
                        tooltip: "فاصل إنعقاد"
                    }
                }
            }
        });
        $('#court-calendar').datepicker().on('changeDate', function (e) {
            $('#court-calendar').trigger('Calendar:DateChanged', local_to_utc(e.date));
        });
        $('#court-calendar').datepicker().on('changeMonth', function (e) {
            var date = local_to_utc(e.date);
            TempFirstCycle = [];
            TempSecondCycle = [];
            TempThirdCycle = [];
            TempFourthCycle = [];
            FirstSeperator = [];
            SecondSeperator = [];
            $('#court-calendar').datepicker('updateDefaultView', date);
            if (CurrentMonth != date.getMonth() || CurrentYear != date.getFullYear()) {
                CurrentMonth = date.getMonth();
                CurrentYear = date.getFullYear();
                $('#court-calendar').trigger('Calendar:MonthChanged', { month: date.getMonth() + 1, year: date.getFullYear() });

            }
        });
        $('#court-calendar').on('CourtCalendar:SetFirstCycle', function (e, dates) {
            TempFirstCycle = dates;
            $('#court-calendar').datepicker('update');
        });
        $('#court-calendar').on('CourtCalendar:SetSecondCycle', function (e, dates) {
            TempSecondCycle = dates;
            $('#court-calendar').datepicker('update');
        });
        $('#court-calendar').on('CourtCalendar:SetThirdCycle', function (e, dates) {
            TempThirdCycle = dates;
            $('#court-calendar').datepicker('update');
        });
        $('#court-calendar').on('CourtCalendar:SetFourthCycle', function (e, dates) {
            TempFourthCycle = dates;
            $('#court-calendar').datepicker('update');
        });
        $('#court-calendar').on('CourtCalendar:SetFirstSeperator', function (e, dates) {
            FirstSeperator = dates;
            $('#court-calendar').datepicker('update');
        });
        $('#court-calendar').on('CourtCalendar:SetSecondSeperator', function (e, dates) {
            SecondSeperator = dates;
            $('#court-calendar').datepicker('update');
        });



    });

</script>
