@using JIC.Crime.View.Models
@using JIC.Base;
@model  MinutesOfSessionCreateViewModel

@if (ViewData["SessionEnded"] != null && (bool)ViewData["SessionEnded"])
{
    <script>
        debugger;
        window.location.href = "/User/Login?returnUrl=/";
    </script>
}
<style>
    .textarea {
        height: 970px;
        width: 600px;
    }
</style>


<div id="Creatediv">
    @*@Html.HiddenFor(m => m.MinutesOfSession.Text)*@
    <a href='@Url.Action("Report", "Print",new {ReportName=JIC.Base.SystemReports.CaseSessionRepo.ToString(),ReportDesc="",sessionId=Model.MinutesOfSession.SessionID,caseId=Model.MinutesOfSession.CaseID,CourtId=Model.MinutesOfSession.CourtID,rollId=Model.SessionData.RollID,printUser=Model.MinutesOfSession.CurentUserID})'>
        <input type='button' value='@JIC.Base.Resources.Resources.PrintMinutesOfSession' class="btn btn-default" />
    </a>


    @using (Ajax.BeginForm("Create", new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "Creatediv" }))
    {

        @Html.AntiForgeryToken();
        @Html.HiddenFor(m => m.MinutesOfSession.SaveAttendance);
        @Html.HiddenFor(m => m.MinutesOfSession.SavedBefore);
        @Html.HiddenFor(m => m.MinutesOfSession.CaseID);
        @Html.HiddenFor(m => m.MinutesOfSession.SessionID);
        @Html.HiddenFor(m => m.MinutesOfSession.CircuitID);

        <div class="panel panel-primary">
            <div class="panel-heading">
                @JIC.Base.Resources.Resources.MinutesOfSession
            </div>
            <div class="panel-body">
                <div class="row">
                    <p>
                        &nbsp; بمحكمة الجنايات المنعقدة علنا يوم
                        @Model.SessionData.DayName
                        &nbsp;الموافق @Model.SessionData.SessionDate.Date.ToShortDateString()
                        بسرايا المحكمة/
                        @Model.CaseBasicData.CourtName
                        <br />

                        &nbsp;  برئاسة السيد الأستاذ المستشار/ @Model.MinutesOfSession.HeadJudge
                        &emsp;رئيس المحكمة
                        <br />

                        &nbsp; وعضوية السيد الأستاذ المستشار/
                        @Model.MinutesOfSession.FirstJudge
                        &emsp; عضو
                        <br />
                        &nbsp; وعضوية السيد الأستاذ المستشار/
                        @Model.MinutesOfSession.SecondJudge
                        &emsp;عضو
                        <br />
                        @if (Model.MinutesOfSession.JudgeCount == 6)
                        {
                        <p>
                            &nbsp;  وعضوية السيد الأستاذ المستشار/
                            @Model.MinutesOfSession.ThirdJudge
                            &emsp; عضو
                            <br />


                        </p>
                    }

                        @if (Model.MinutesOfSession.JudgeCount == 6)
                        {
                            <p>
                                &nbsp;   وعضوية السيد الأستاذ المستشار/
                                @Model.MinutesOfSession.FourthJudge
                                &emsp; عضو
                                <br />


                            </p>
                        }

                        @if (Model.MinutesOfSession.JudgeCount == 8)
                        {<p>
                                &nbsp; وعضوية السيد الأستاذ المستشار/
                                @Model.MinutesOfSession.FifthJudge
                                &emsp;عضو
                                <br />


                            </p>
                        }

                        @if (Model.MinutesOfSession.JudgeCount == 8)
                        {
                            <p>
                                &nbsp;   وعضوية السيد الأستاذ المستشار/
                                @Model.MinutesOfSession.SixthJudge
                                &emsp; عضو
                                <br />


                            </p>
                        }<br />
                        &nbsp; وحضور السيد الاستاذ/
                        @Model.SessionData.ProsecutorName
                        &emsp;وكيل النيابة
                        <br />
                        &nbsp;  وحضور السيد الاستاذ /
                        @Model.SessionData.SecretaryAssistantName
                        &emsp;أمين السر
                        <br />
                        <br />
                        &nbsp;&nbsp;فى الجناية المقيدة  "بالرقم الكلى @Model.CaseBasicData.SecondNumber
                        /@Model.CaseBasicData.SecondYear
                        /@Model.CaseBasicData.SecoundProsecutionName,
                        والرقم الجزئى  @Model.CaseBasicData.FirstNumber
                        /@Model.CaseBasicData.FirstYear
                        /@Model.CaseBasicData.FirstprosecutionName"
                        <br /> <br />
                        &nbsp; ضد
                        @Html.Label((Model.CaseDefectsData.Count).ToString() + " متهم ")

                        @(Html
                                                                                                                                                                                           .Grid(Model.CaseDefectsData.AsEnumerable())
                                                                                                                                                                                           .Build(columns =>
                                                                                                                                                                                           {
                                                                                                                                                                                               columns.Add(model => model.Order).Titled(JIC.Base.Resources.Resources.number);

                                                                                                                                                                                               columns.Add(model => model.Name).Titled(JIC.Base.Resources.Resources.Name);
                                                                                                                                                                                               columns.Add(model => model.Nationality).Titled(JIC.Base.Resources.Resources.Nationality);
                                                                                                                                                                                               columns.Add(model => model.NationalID == null ? model.PassportNumber : model.NationalID).Titled(JIC.Base.Resources.Resources.NationalId);
                                                                                                                                                                                                   //columns.Add(model => model.Birthdate).Titled(JIC.Base.Resources.Resources.Birthday);
                                                                                                                                                                                                   columns.Add(model => (model.Age == 0) ? " " : (model.Age.ToString())).Titled(JIC.Base.Resources.Resources.Age);
                                                                                                                                                                                               columns.Add(model => model.JobName).Titled(JIC.Base.Resources.Resources.Job);
                                                                                                                                                                                                   //  columns.Add(model => model.PassportNumber).Titled(JIC.Base.Resources.Resources.PassportNo);
                                                                                                                                                                                                   columns.Add(model => model.Address).Titled(JIC.Base.Resources.Resources.Address);

                                                                                                                                                                                           }).RowCss(row => "Defendent")

                        )


                        <br />
                        <br />


                        <center> نودى المتهم</center>

                    </div>
                    <div class="row">
                        @Html.TextAreaFor(model => model.MinutesOfSession.Text, new { @class = "textarea" })
                        @Html.ValidationMessageFor(model => model.MinutesOfSession.Text, "", new { @class = "text-danger" })

                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-4">
                    <input type="submit" value="@JIC.Base.Resources.Resources.Save" id="ADD" class="btn btn-default" />
                </div>
                <div class="col-sm-4">
                    <a href='@Url.Action("Index", "ALLMinutesOfSession", new { id = Model.MinutesOfSession.CaseID, SessionID = Model.MinutesOfSession.SessionID, CircuitID = Model.MinutesOfSession.CircuitID })'>
                        <input type='button' value='@JIC.Base.Resources.Resources.Cancel' class="btn btn-default" />
                    </a>
                </div>
            </div>

        }
</div>

@if (ViewBag.Saved != null && (bool)ViewBag.Saved)
{
    <script>
        debugger;
        $(document).trigger('Minutes:Saved');
    </script>
}



<script type="text/javascript">
        debugger;
             OnDocReady(function () {
               //  var SaveAttendance=$("#@Html.IdFor(m=>m.MinutesOfSession.SaveAttendance)").val();
               //  var SavedBefore=$("#@Html.IdFor(m=>m.MinutesOfSession.SavedBefore)").val();

               //  if (SaveAttendance == "True") {
                     //   $(document).on('MinutesOfSession:Added', function () {

                    // $("#Creatediv").show();
                  //   if (SavedBefore != "True") {
                 debugger;
                 $(document).on('Attendance:Saved', function () {
                        var text = $("#@Html.IdFor(m => m.MinutesOfSession.Text)").val();
                        if (text=="") {
                            debugger;
                            var CaseID = $("#@Html.IdFor(m=>m.MinutesOfSession.CaseID)").val();
                            var Sessionid = $("#@Html.IdFor(m=>m.MinutesOfSession.SessionID)").val();
                            $.ajax(
                                {
                                    url: '/MinutesOfSession/TextOfSession',
                                    type: "GET",
                                    dataType: "JSON",
                                    data: { id: CaseID, SessionID: Sessionid },
                                    contentType: 'application/json; charset=utf-8',
                                    success: function (textMinutesSession) {
                                        //  $("#MinutesOfSession_Text").text().append(textMinutesSession);
                                        $('#MinutesOfSession_Text').val($('#MinutesOfSession_Text').val() + ' ' + textMinutesSession);
                                    }
                                });
                            //   };
                            //  };
                        };
                 });
            var TextPredectionsJS = @Html.Raw(Model.GetAutoCompleteJS())
            window.CrimeAutoCompleteStrategy = {
                id: 'crimeAutoComplete',
                match: /(^|\s)@@([a-z0-9+\-\_\u0621-\u064A\040]*)$/,
                search: function (term, callback) {
                    callback(Object.keys(TextPredectionsJS).filter(function (key) {
                        return key.startsWith(term);
                    }));
                },
                template: function (key) {
                    return key;
                },
                replace: function (key) {
                    return '\n '+TextPredectionsJS[key];
                }
            };

            var editor = new Textcomplete.editors.Textarea(document.getElementById('@Html.IdFor(model => model.MinutesOfSession.Text)'));

            var textcomplete = new Textcomplete(editor);
            textcomplete.register([CrimeAutoCompleteStrategy]);
        });



</script>
