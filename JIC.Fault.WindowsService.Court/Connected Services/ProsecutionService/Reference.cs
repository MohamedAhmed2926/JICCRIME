//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JIC.Fault.WindowsService.Court.ProsecutionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProsecutionService.IProsecutionService")]
    public interface IProsecutionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/updateCourtHearingDateReservation", ReplyAction="http://tempuri.org/IProsecutionService/updateCourtHearingDateReservationResponse")]
        int updateCourtHearingDateReservation(int reservationId, System.DateTime newReservationDate, int newCircleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/updateCourtHearingDateReservation", ReplyAction="http://tempuri.org/IProsecutionService/updateCourtHearingDateReservationResponse")]
        System.Threading.Tasks.Task<int> updateCourtHearingDateReservationAsync(int reservationId, System.DateTime newReservationDate, int newCircleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/newCircle", ReplyAction="http://tempuri.org/IProsecutionService/newCircleResponse")]
        string newCircle(int circleId, int courtId, System.Nullable<System.DateTime>[] circleHearingDates);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/newCircle", ReplyAction="http://tempuri.org/IProsecutionService/newCircleResponse")]
        System.Threading.Tasks.Task<string> newCircleAsync(int circleId, int courtId, System.Nullable<System.DateTime>[] circleHearingDates);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/updateBusinessCaseDescription", ReplyAction="http://tempuri.org/IProsecutionService/updateBusinessCaseDescriptionResponse")]
        string updateBusinessCaseDescription(int circleId, int courtId, int businessCaseId, System.DateTime circleDate, string newDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/updateBusinessCaseDescription", ReplyAction="http://tempuri.org/IProsecutionService/updateBusinessCaseDescriptionResponse")]
        System.Threading.Tasks.Task<string> updateBusinessCaseDescriptionAsync(int circleId, int courtId, int businessCaseId, System.DateTime circleDate, string newDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/courtJudgementCompleteResolution", ReplyAction="http://tempuri.org/IProsecutionService/courtJudgementCompleteResolutionResponse")]
        string courtJudgementCompleteResolution(string resolution, int circleId, int businesscaseId, JIC.Base.Views.ProsecutionService.party[] parties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/courtJudgementCompleteResolution", ReplyAction="http://tempuri.org/IProsecutionService/courtJudgementCompleteResolutionResponse")]
        System.Threading.Tasks.Task<string> courtJudgementCompleteResolutionAsync(string resolution, int circleId, int businesscaseId, JIC.Base.Views.ProsecutionService.party[] parties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/addCourtDecision", ReplyAction="http://tempuri.org/IProsecutionService/addCourtDecisionResponse")]
        string addCourtDecision(int businessCaseId, int decisionCode, string decisionText, string decisionUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/addCourtDecision", ReplyAction="http://tempuri.org/IProsecutionService/addCourtDecisionResponse")]
        System.Threading.Tasks.Task<string> addCourtDecisionAsync(int businessCaseId, int decisionCode, string decisionText, string decisionUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/addPartyToBusinessCase", ReplyAction="http://tempuri.org/IProsecutionService/addPartyToBusinessCaseResponse")]
        string addPartyToBusinessCase(JIC.Base.Views.ProsecutionService.parParties parParties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/addPartyToBusinessCase", ReplyAction="http://tempuri.org/IProsecutionService/addPartyToBusinessCaseResponse")]
        System.Threading.Tasks.Task<string> addPartyToBusinessCaseAsync(JIC.Base.Views.ProsecutionService.parParties parParties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/updatePartyToBusinessCase", ReplyAction="http://tempuri.org/IProsecutionService/updatePartyToBusinessCaseResponse")]
        string updatePartyToBusinessCase(JIC.Base.Views.ProsecutionService.parParties parParties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/updatePartyToBusinessCase", ReplyAction="http://tempuri.org/IProsecutionService/updatePartyToBusinessCaseResponse")]
        System.Threading.Tasks.Task<string> updatePartyToBusinessCaseAsync(JIC.Base.Views.ProsecutionService.parParties parParties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/businessCaseMerging", ReplyAction="http://tempuri.org/IProsecutionService/businessCaseMergingResponse")]
        string businessCaseMerging(int originalBusinessCase, System.Nullable<int>[] mergedBusinessCases);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProsecutionService/businessCaseMerging", ReplyAction="http://tempuri.org/IProsecutionService/businessCaseMergingResponse")]
        System.Threading.Tasks.Task<string> businessCaseMergingAsync(int originalBusinessCase, System.Nullable<int>[] mergedBusinessCases);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProsecutionServiceChannel : JIC.Fault.WindowsService.Court.ProsecutionService.IProsecutionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProsecutionServiceClient : System.ServiceModel.ClientBase<JIC.Fault.WindowsService.Court.ProsecutionService.IProsecutionService>, JIC.Fault.WindowsService.Court.ProsecutionService.IProsecutionService {
        
        public ProsecutionServiceClient() {
        }
        
        public ProsecutionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProsecutionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProsecutionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProsecutionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int updateCourtHearingDateReservation(int reservationId, System.DateTime newReservationDate, int newCircleId) {
            return base.Channel.updateCourtHearingDateReservation(reservationId, newReservationDate, newCircleId);
        }
        
        public System.Threading.Tasks.Task<int> updateCourtHearingDateReservationAsync(int reservationId, System.DateTime newReservationDate, int newCircleId) {
            return base.Channel.updateCourtHearingDateReservationAsync(reservationId, newReservationDate, newCircleId);
        }
        
        public string newCircle(int circleId, int courtId, System.Nullable<System.DateTime>[] circleHearingDates) {
            return base.Channel.newCircle(circleId, courtId, circleHearingDates);
        }
        
        public System.Threading.Tasks.Task<string> newCircleAsync(int circleId, int courtId, System.Nullable<System.DateTime>[] circleHearingDates) {
            return base.Channel.newCircleAsync(circleId, courtId, circleHearingDates);
        }
        
        public string updateBusinessCaseDescription(int circleId, int courtId, int businessCaseId, System.DateTime circleDate, string newDescription) {
            return base.Channel.updateBusinessCaseDescription(circleId, courtId, businessCaseId, circleDate, newDescription);
        }
        
        public System.Threading.Tasks.Task<string> updateBusinessCaseDescriptionAsync(int circleId, int courtId, int businessCaseId, System.DateTime circleDate, string newDescription) {
            return base.Channel.updateBusinessCaseDescriptionAsync(circleId, courtId, businessCaseId, circleDate, newDescription);
        }
        
        public string courtJudgementCompleteResolution(string resolution, int circleId, int businesscaseId, JIC.Base.Views.ProsecutionService.party[] parties) {
            return base.Channel.courtJudgementCompleteResolution(resolution, circleId, businesscaseId, parties);
        }
        
        public System.Threading.Tasks.Task<string> courtJudgementCompleteResolutionAsync(string resolution, int circleId, int businesscaseId, JIC.Base.Views.ProsecutionService.party[] parties) {
            return base.Channel.courtJudgementCompleteResolutionAsync(resolution, circleId, businesscaseId, parties);
        }
        
        public string addCourtDecision(int businessCaseId, int decisionCode, string decisionText, string decisionUrl) {
            return base.Channel.addCourtDecision(businessCaseId, decisionCode, decisionText, decisionUrl);
        }
        
        public System.Threading.Tasks.Task<string> addCourtDecisionAsync(int businessCaseId, int decisionCode, string decisionText, string decisionUrl) {
            return base.Channel.addCourtDecisionAsync(businessCaseId, decisionCode, decisionText, decisionUrl);
        }
        
        public string addPartyToBusinessCase(JIC.Base.Views.ProsecutionService.parParties parParties) {
            return base.Channel.addPartyToBusinessCase(parParties);
        }
        
        public System.Threading.Tasks.Task<string> addPartyToBusinessCaseAsync(JIC.Base.Views.ProsecutionService.parParties parParties) {
            return base.Channel.addPartyToBusinessCaseAsync(parParties);
        }
        
        public string updatePartyToBusinessCase(JIC.Base.Views.ProsecutionService.parParties parParties) {
            return base.Channel.updatePartyToBusinessCase(parParties);
        }
        
        public System.Threading.Tasks.Task<string> updatePartyToBusinessCaseAsync(JIC.Base.Views.ProsecutionService.parParties parParties) {
            return base.Channel.updatePartyToBusinessCaseAsync(parParties);
        }
        
        public string businessCaseMerging(int originalBusinessCase, System.Nullable<int>[] mergedBusinessCases) {
            return base.Channel.businessCaseMerging(originalBusinessCase, mergedBusinessCases);
        }
        
        public System.Threading.Tasks.Task<string> businessCaseMergingAsync(int originalBusinessCase, System.Nullable<int>[] mergedBusinessCases) {
            return base.Channel.businessCaseMergingAsync(originalBusinessCase, mergedBusinessCases);
        }
    }
}
